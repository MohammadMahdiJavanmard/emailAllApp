/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package emailall;

import java.awt.Desktop;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;


/**
 *
 * @author mahdi
 */
public class MailApplication extends javax.swing.JFrame {

    /**
     * Creates new form MailApplication
     */
    public MailApplication() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        studentsInfoFileAddress = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        parentFolderAddress = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        emailAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        host = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        port = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        gradingSheetName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        subject = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        body = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel1.setText("Student Information Excel File:");

        studentsInfoFileAddress.setEditable(false);
        studentsInfoFileAddress.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        studentsInfoFileAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentsInfoFileAddressActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jButton1.setText("Search Excel File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jButton2.setText("How to Use?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel2.setText("Parent Folder:");

        parentFolderAddress.setEditable(false);
        parentFolderAddress.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N

        jButton3.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jButton3.setText("Search Parent Folder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel3.setText("Email Address:");

        emailAddress.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        emailAddress.setText("sbucs102@gmail.com");

        jLabel4.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel4.setText("Password");

        password.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel5.setText("Host:");

        host.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        host.setText("smtp.gmail.com");
        host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel6.setText("Port:");

        port.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        port.setText("587");

        jLabel7.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel7.setText("Grading Sheet Name:");

        gradingSheetName.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        gradingSheetName.setText("HW???GradeSheet.xls");

        jLabel8.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel8.setText("Subject:");

        subject.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        subject.setText("Assignment #? - Grade");
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        jLabel9.setText("Body:");

        jScrollPane1.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N

        body.setColumns(20);
        body.setFont(new java.awt.Font("Monaco", 0, 15)); // NOI18N
        body.setLineWrap(true);
        body.setRows(5);
        body.setText("Dear $$$,\nFile attached to this Email contains grading sheet for your ???th assignment. Kindly take a look at it and let me know if you have any objection to the grading. You will have just one week to inform me of your objection. After a week, grades will be finalized and there won't be any way to change them. So, please take a look at my comments and let me know if I made mistake in grading your assignment.\n\n\n\nBest Regards,\nYour TA!");
        jScrollPane1.setViewportView(body);

        jButton4.setText("Send To All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton2)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(parentFolderAddress)
                                        .addComponent(emailAddress)
                                        .addComponent(password)
                                        .addComponent(host, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                                        .addComponent(port)
                                        .addComponent(studentsInfoFileAddress))
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton3)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(gradingSheetName)
                                        .addComponent(subject, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentsInfoFileAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(parentFolderAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(gradingSheetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentsInfoFileAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentsInfoFileAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentsInfoFileAddressActionPerformed

    private void hostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostActionPerformed

    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = fileChooser.showOpenDialog(null);
        if (result != JFileChooser.CANCEL_OPTION) {
            File fileName = fileChooser.getSelectedFile();
            if ((fileName != null) && (!fileName.getName().equals(""))) {
                studentsInfoFileAddress.setText(fileName.getPath());
            }
            else {
                studentsInfoFileAddress.setText("");
            }
        } else {
            studentsInfoFileAddress.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fileChooser.showOpenDialog(null);
        if (result != JFileChooser.CANCEL_OPTION) {
            File fileName = fileChooser.getSelectedFile();
            if ((fileName != null) && (!fileName.getName().equals(""))) {
                parentFolderAddress.setText(fileName.getPath());
            }
            else {
                parentFolderAddress.setText("");
            }
        }
        else {
            parentFolderAddress.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if ((!studentsInfoFileAddress.getText().equals("")) && (!parentFolderAddress.getText().equals("")) && (!gradingSheetName.getText().equals("")) &&
                (!body.getText().equals("")) && (!subject.getText().equals("")) && (!emailAddress.getText().equals("")) && (!password.getText().equals("")) &&
		(!host.getText().equals("")) && (!port.getText().equals("")) && (!gradingSheetName.getText().contains("???")) && 
		(!subject.getText().contains("???")) && (!body.getText().contains("???"))) {
            File parentFolder = new File(parentFolderAddress.getText());
            String[] childFolders = parentFolder.list();
            for (String studentFolder: childFolders) {
                String studentsInformation = findRequiredInfo(studentFolder);
                if (studentsInformation == null){
                    System.out.printf("log:: For %s, message was NOT sent successfully !!!!!!\n", studentFolder);
                    continue;
                }
                String[] infos = studentsInformation.split("[$]");
                String studentFirstName = infos[0];
                String studentEmail = infos[1];
                
                Properties props = new Properties();
                props.put("mail.smtp.auth", true);
                props.put("mail.smtp.starttls.enable", true);
                props.put("mail.smtp.host", host.getText());
                props.put("mail.smtp.port", port.getText());
                
                Session session = Session.getInstance(props,
                        new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
			return new PasswordAuthentication(emailAddress.getText(), password.getText());
			}
		});
                
                try {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress(emailAddress.getText()));
                    message.setRecipients(Message.RecipientType.TO,
                            InternetAddress.parse(studentEmail));
                    message.setSubject(subject.getText());
                    BodyPart messageBodyPart = new MimeBodyPart();
                    messageBodyPart.setText(body.getText().replace("$$$", studentFirstName));
                    Multipart multipart = new MimeMultipart();
                    
                    multipart.addBodyPart(messageBodyPart);
                    messageBodyPart = new MimeBodyPart();
                    String fileName = parentFolderAddress.getText() + "/" + studentFolder + "/" + gradingSheetName.getText();
                    DataSource dataSource = new FileDataSource(fileName);
                    messageBodyPart.setDataHandler(new DataHandler(dataSource));
                    messageBodyPart.setFileName(gradingSheetName.getText());
                    multipart.addBodyPart(messageBodyPart);
                    
                    message.setContent(multipart);
                    Transport.send(message);
                    System.out.printf("log:: For %s, message was sent successfully!\n", studentFolder);
                    
                    
                }
                catch (MessagingException ee) {
                    throw new RuntimeException(ee);
                }
            }
            System.exit(0);
        } else if (studentsInfoFileAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"You didnt choose excel file containing students' information!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (parentFolderAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"You didnt choose parent forlder!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (gradingSheetName.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"You didnt provide the name of grading sheet!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (gradingSheetName.getText().contains("???")) {
            JOptionPane.showMessageDialog(null,"In the name of gradingsheet, please determine the number of assignment!!", "Error!!",  JOptionPane.ERROR_MESSAGE);
        } else if (body.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Your message doesn't have body!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (body.getText().contains("???")) {
            JOptionPane.showMessageDialog(null,"In body, please determine the number of assignment!!", "Error!!",  JOptionPane.ERROR_MESSAGE);			
        } else if (subject.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Your message doesn't have subject!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (subject.getText().contains("???")) {
            JOptionPane.showMessageDialog(null,"In subject, please determine the number of assignment!!", "Error!!",  JOptionPane.ERROR_MESSAGE);	
        } else if (emailAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"You didn't provide your email address!!", "Error!!", JOptionPane.ERROR_MESSAGE);
        } else if (emailAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "You didn't provide passowrd of your email!!", "Error!!", JOptionPane.ERROR_MESSAGE);	
        } else if (host.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Host can not be empty!!", "Error!!", JOptionPane.ERROR_MESSAGE);	
        } else if (port.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Port can not be empty!!", "Error!!", JOptionPane.ERROR_MESSAGE);	
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("help.pdf");
                Desktop.getDesktop().open(myFile);
            }catch(IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea body;
    private javax.swing.JTextField emailAddress;
    private javax.swing.JTextField gradingSheetName;
    private javax.swing.JTextField host;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField parentFolderAddress;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField port;
    private javax.swing.JTextField studentsInfoFileAddress;
    private javax.swing.JTextField subject;
    // End of variables declaration//GEN-END:variables

    private String findRequiredInfo(String loginID) {
        try {
            FileInputStream file = new FileInputStream(new File(studentsInfoFileAddress.getText()));
            HSSFWorkbook workBook = new HSSFWorkbook(file);
            HSSFSheet sheet = workBook.getSheetAt(0);
            Iterator<Row> rowIterator = sheet.iterator();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
		Iterator<Cell> cellIterator = row.cellIterator();
				
		Cell cell = cellIterator.next();
		String userName = cell.getStringCellValue();
		cell = cellIterator.next();
		String firstName = cell.getStringCellValue();
		cell = cellIterator.next();
		String lastName = cell.getStringCellValue();
		cell = cellIterator.next();
                String email = cell.getStringCellValue();		
		if (userName.equals(loginID)) {
                    return firstName + "$" + email;
		}
            }
			
	} catch(FileNotFoundException e) {
		e.printStackTrace();
	} catch (IOException e) {
		e.printStackTrace();
	}
	return null;
    }
}
